services:
  postgres:
    build: ./postgres
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: musicdb
    ports:
      - "5432:5432"
    networks:
      - app_network

  kafka:
    image: apache/kafka:3.7.0-rc2
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "8083:8083"
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
#      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
    networks:
      - app_network

  spark-master:
    build: ./spark-master
    container_name: spark-master
    hostname: spark-master
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - app_network

  spark-worker:
    build: ./spark-worker
    container_name: spark-worker
    hostname: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
#    networks:
#      - app_network

  mongodb:
    build: ./mongodb
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    networks:
      - app_network

networks:
  app_network:
