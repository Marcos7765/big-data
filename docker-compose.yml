services:
  postgres:
    build: ./postgres
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: musicdb
    ports:
      - "5432:5432"
    networks:
      - app_network

  kafka:
    build: ./kafka
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_PROCESS_ROLES: broker
    ports:
      - "9092:9092"
    networks:
      - app_network

  debezium:
    build: ./debezium
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID_CONFIG: 1
      CONFIG_STORAGE_TOPIC: debezium_configs
      OFFSET_STORAGE_TOPIC: debezium_offsets
      STATUS_STORAGE_TOPIC: debezium_statuses
    ports:
      - "8083:8083"
    depends_on:
      - kafka
    networks:
      - app_network

  spark-master:
    build: ./spark-master
    container_name: spark-master
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - app_network

  spark-worker:
    build: ./spark-worker
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - app_network

  mongodb:
    build: ./mongodb
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - app_network

networks:
  app_network:
